// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: comment.sql

package db

import (
	"context"
)

const createComment = `-- name: CreateComment :one
INSERT INTO
  comment (
    name,
    contact,
    message,
    ip,
    user_agent,
    referrer,
    host_page
  )
VALUES
  (?, ?, ?, ?, ?, ?, ?) RETURNING id, name, contact, message, ip, user_agent, referrer, host_page, created_at, updated_at
`

type CreateCommentParams struct {
	Name      string
	Contact   string
	Message   string
	Ip        string
	UserAgent string
	Referrer  string
	HostPage  string
}

func (q *Queries) CreateComment(ctx context.Context, arg CreateCommentParams) (Comment, error) {
	row := q.db.QueryRowContext(ctx, createComment,
		arg.Name,
		arg.Contact,
		arg.Message,
		arg.Ip,
		arg.UserAgent,
		arg.Referrer,
		arg.HostPage,
	)
	var i Comment
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Contact,
		&i.Message,
		&i.Ip,
		&i.UserAgent,
		&i.Referrer,
		&i.HostPage,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
